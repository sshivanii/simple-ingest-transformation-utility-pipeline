version: "3.7"
services:
  situp:
    container_name: situp
    build:
      context: ../..
      dockerfile: examples/situp/DOCKERFILE
    working_dir: /app
    command: sh situp-wait-for-odfe-and-start.sh
    volumes:
      - ../situp-wait-for-odfe-and-start.sh:/app/situp-wait-for-odfe-and-start.sh
      - ../trace_analytics.yml:/app/transformation-instance.yml
      - ../demo/root-ca.pem:/app/root-ca.pem
      - ../demo/demo-situp.crt:/app/demo-situp.crt
      - ../demo/demo-situp.key:/app/demo-situp.key
      - ../situp/situp-core-0.1-beta.jar:/app/situp.jar
    ports:
      - "21890:21890"
    networks:
      - my_network
    depends_on:
      - opendistro-for-elasticsearch
  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib:0.8.0
    command: [ "--config=/etc/otel-collector-config.yml" ]
    working_dir: "/project"
    volumes:
      - ${PWD}:/project
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
      - ../demo/demo-situp.crt:/etc/demo-situp.crt
    ports:
      - "14250:14250"
    networks:
      - my_network
  jaeger-agent:
    container_name: jaeger-agent
    image: jaegertracing/jaeger-agent:latest
    command: [ "--reporter.grpc.host-port=otel-collector:14250" ]
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778/tcp"
    networks:
      - my_network
  jaeger-hot-rod:
    image: jaegertracing/example-hotrod:latest
    command: [ "all" ]
    environment:
      - JAEGER_AGENT_HOST=jaeger-agent
      - JAEGER_AGENT_PORT=6831
    ports:
      - "8080-8083:8080-8083"
    depends_on:
      - jaeger-agent
    networks:
      - my_network
  opendistro-for-elasticsearch:
    container_name: node-0.example.com
    image: 'amazon/opendistro-for-elasticsearch:1.10.1'
    ports:
      - '9200:9200'
      - '9600:9600'
    environment:
      - discovery.type=single-node
    networks:
      - my_network
  kibana:
    image: amazon/opendistro-for-elasticsearch-kibana:1.11.0
    container_name: odfe-kibana
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      ELASTICSEARCH_URL: https://node-0.example.com:9200
      ELASTICSEARCH_HOSTS: https://node-0.example.com:9200
    networks:
      - my_network
networks:
  my_network: